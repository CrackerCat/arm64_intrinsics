#!/usr/bin/env python3

import io
import json

# aarch64.json from https://raw.githubusercontent.com/NeatMonster/AMIE/master/aarch64.json

with open('aarch64.json', 'rb') as h:
    amie = json.load(h)

regs = {}

for regname, bits in amie['registers']['encodings']['MSR|MRS'].items():
    bits_str = ''.join(bits)
    if 'x' in bits_str:
        low = int(bits_str.replace('x', '0'), 2)
        high = int(bits_str.replace('x', '1'), 2)
    else:
        low = int(bits_str, 2)
        high = low

    for ii in range(low, high + 1):
        regs[ii] = regname

with io.open('src/msr.h', 'w', newline='\n') as h:
    h.write('// this file is autogenerated by msr.py\n')
    h.write('// do not edit\n')
    h.write('\n')
    h.write('#include <map>\n')
    h.write('using namespace std;\n')
    h.write('\n')
    h.write('map<uint32_t, const char *> msr = {\n');

    for key, val in regs.items():
        h.write('    {0x%06x, "%s"},\n' % (key, val))

    h.write('};\n')
